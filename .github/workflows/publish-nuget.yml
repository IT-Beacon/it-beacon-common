name: Publish NuGet Package

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'   # Only run when a version tag like v1.2.3 is pushed

jobs:
  build-and-publish:
    runs-on: windows-latest

    steps:
      # 1. Checkout repo
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Install .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # 3. Install GitVersion
      - name: Install GitVersion
        uses: GitTools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: '5.x'

      # 4. Determine version
      - name: Use GitVersion
        id: gitversion
        uses: GitTools/actions/gitversion/execute@v0.10.2

      # 5. Create artifacts folder
      - name: Create artifacts folder
        run: New-Item -ItemType Directory -Force -Path artifacts

      # 6. Restore NuGet packages
      - name: Restore dependencies
        run: dotnet restore

      # 7. Build
      - name: Build
        run: dotnet build --configuration Release

      # 8. Pack NuGet
      - name: Pack NuGet
        run: dotnet pack -p:PackageVersion=1.0.${{ github.run_number }} -o artifacts

      # 9. Verify package file exists
      - name: Verify package file
        run: |
          Write-Host "Checking for .nupkg file in artifacts folder..."
          Get-ChildItem artifacts
          if (-not (Test-Path "artifacts\*.nupkg")) {
            Write-Error "No .nupkg file found in artifacts folder!"
            exit 1
          }

      # 10. Push package to GitHub Packages
      - name: Push to GitHub Packages
        env:
          AUTH_TOKEN: "${{ secrets.NUGET_AUTH_TOKEN }}"
        run: dotnet nuget push "artifacts\*.nupkg" --source "github" --api-key $env:AUTH_TOKEN
